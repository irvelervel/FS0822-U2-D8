h1 {
  color: purple;
}

// features SASS
// 1) SELETTORI ANNIDATI/NIDIFICATI
nav {
  display: block;
  ul {
    padding: 0;
    list-style-type: none;
    font-size: 1.2em;
    display: flex;
    li {
      margin-right: 10px;
    }
  }
}

#main {
  color: white;
  background-color: navy;
  p {
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',
      sans-serif;
    letter-spacing: 0.5em;
    > span {
      font-weight: 900;
    }
  }
}

// > è un selettore di figlio diretto
// ' ' è un selettore di figli a qualsiasi livello

p > span {
  // questo è un selettore che mi targetta solamente gli span
  // che sono FIGLI DIRETTI dei p
  // <p><span></span></p>
}

p span {
  // questo è un selettore che mi targetta tutti gli span figli
  // di tutti i div a qualsiasi livello
  // <p><a><span></span></a></p>
}

// 2) PSEUDOCLASSI INTEGRATE

#main-2 {
  a {
    color: green;
    text-decoration: none;
    font-size: 1.5em;
    &:hover {
      font-size: 2em;
    }
    &:visited {
      color: red;
    }
  }
}

// 3) PROPRIETÀ ANNIDATE/NIDIFICATE CON PREFISSO COMUNE
#main-3 {
  display: flex;
  flex: {
    direction: column;
    wrap: wrap;
  }

  .my-paragraph {
    // font-size: 2em;
    // font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',
    //   'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    // font-weight: 900;
    font: {
      family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',
        'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
      size: 2em;
      weight: 900;
    }
  }
}

// 4) VARIABILI SASS
// Una variabile è un "contenitore" atto a memorizzare un valore
// le variabili nei fogli di stile possono servire per "dare un nome"
// a valori comuni, quelli che riutilizzerete di più.

// anche se si chiamano "variabili", nell'utilizo pratico
// risultano più simili al concetto delle costanti!
$main-padding: 15px;
$color-primary: #ec3333;
$color-secondary: #651d1d;

.my-container {
  display: flex;
  width: 100%;
  p {
    display: block;
    width: 45%;
    font-size: 1.2em;
    padding-left: $main-padding;
    padding-right: $main-padding;
    border: 1px solid $color-secondary;
    button {
      display: block;
      padding: $main-padding;
      color: white;
      background-color: $color-primary;
      border: 1px solid $color-secondary;
    }
  }
}

.my-title {
  color: $color-primary;
}

// riassegnando la variabile ad un nuovo valore, da questo
// punto in poi quest'ultimo verrà applicato alle proprietà
// $main-padding: 20px;
// body {
//   padding: $main-padding;
// }

// che valori possiamo dare a una variabile SASS?
// - numeri (15px, 3em, 50%)
// - stringhe ('Lucida Sans', "Times New Roman", Geneva)
// - colori (red, #3f3f3f, rgba(0, 0, 255, 0.5))
// - boolean (true/false)
// - null
// - liste di valori (5px solid black, 'Lucida Sans', 'Lucida Sans Regular')

$main-border: 1px solid rgba(0, 0, 255, 0.5);

$stefano: 1px solid red;

body {
  border: $stefano;
}

// primary in bootstrap è un blu scuro
// warning è un giallo

// le variabili SASS consentono anche di utililzzare operatori! logici, numerici, di comparazione...
// == !=, >, >=, <, <=
// + - * /
$main-distance: 5px + 15px;
$pippo-multiplier: 6;

body {
  margin: $main-distance * $pippo-multiplier;
}

// 5) PARTIALS
// È prassi comune dividere le regole di stile in più file .scss, in modo da tenere separate
// le variabili, o definire degli stili per un header, per un footer, per tutti i pulsanti,
// un foglio di reset etc.

// un file partial è identificato con un nome che comincia con _
// _header, _footer, _colors, _variables, _buttons, etc.

// i file partials non verranno automaticamente compilati in .css, ma nascono
// per venire incorporati in altri file .scss (i quali poi verranno compilati)
